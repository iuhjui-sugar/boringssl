{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7b55dc76_0547afaf",
        "filename": "ssl/dtls_record.cc",
        "patchSetId": 5
      },
      "lineNbr": 237,
      "author": {
        "id": 14196
      },
      "writtenOn": "2024-08-13T01:07:28Z",
      "side": 1,
      "message": "Would it make more sense and make it a bit nicer to extract the guts of this if and the else into separate little functions for dtls 1.3 and dtls legacy, and just call them in here?",
      "revId": "20efedcccd17c14327938526e3935e4e1eb953ef",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "453f0c24_66b2070f",
        "filename": "ssl/dtls_record.cc",
        "patchSetId": 5
      },
      "lineNbr": 237,
      "author": {
        "id": 5440
      },
      "writtenOn": "2024-08-14T00:19:00Z",
      "side": 1,
      "message": "I extracted the guts of the new format logic into a separate function. I don\u0027t know if it\u0027s worth it to also extract the logic for the old format.",
      "parentUuid": "7b55dc76_0547afaf",
      "revId": "20efedcccd17c14327938526e3935e4e1eb953ef",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4178576_6cc8000e",
        "filename": "ssl/dtls_record.cc",
        "patchSetId": 5
      },
      "lineNbr": 254,
      "author": {
        "id": 14196
      },
      "writtenOn": "2024-08-13T01:07:28Z",
      "side": 1,
      "message": "I really hate to do this to you, but this repeated little snippet really screams for a goto drop_packet;",
      "revId": "20efedcccd17c14327938526e3935e4e1eb953ef",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f8935b2_932f2d93",
        "filename": "ssl/dtls_record.cc",
        "patchSetId": 5
      },
      "lineNbr": 254,
      "author": {
        "id": 5440
      },
      "writtenOn": "2024-08-14T00:19:00Z",
      "side": 1,
      "message": "I avoided the need for a goto by having the extracted function return a bool and do the repeated snippet once if it returns false.",
      "parentUuid": "a4178576_6cc8000e",
      "revId": "20efedcccd17c14327938526e3935e4e1eb953ef",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6cf5de11_c5fdf0a3",
        "filename": "ssl/dtls_record.cc",
        "patchSetId": 5
      },
      "lineNbr": 290,
      "author": {
        "id": 14196
      },
      "writtenOn": "2024-08-13T01:07:28Z",
      "side": 1,
      "message": "Is this comment in the right place?",
      "revId": "20efedcccd17c14327938526e3935e4e1eb953ef",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6adde89e_1f5f9638",
        "filename": "ssl/dtls_record.cc",
        "patchSetId": 5
      },
      "lineNbr": 290,
      "author": {
        "id": 5440
      },
      "writtenOn": "2024-08-14T00:19:00Z",
      "side": 1,
      "message": "No. My memory is that the DTLS1_BITMAP functions dealing with whether we\u0027ve seen a packet before are what expect to have the epoch in the high bytes of the sequence number. This comment belongs with code that sets those epoch bytes for that purpose, but I can\u0027t find that code. I\u0027ve removed this comment since I can\u0027t find the code it belongs to.\n\n(Note that the sequence number passed to the AEAD Open operation should be without the epoch, a difference between DTLS 1.2 and 1.3.)",
      "parentUuid": "6cf5de11_c5fdf0a3",
      "revId": "20efedcccd17c14327938526e3935e4e1eb953ef",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0f79a8c_7db0a39a",
        "filename": "ssl/dtls_record.cc",
        "patchSetId": 5
      },
      "lineNbr": 433,
      "author": {
        "id": 14196
      },
      "writtenOn": "2024-08-13T01:07:28Z",
      "side": 1,
      "message": "by the time we have more than one magical number in here, these scream to be defined as constants for something more meaningful than a bare 5 and 13",
      "range": {
        "startLine": 433,
        "startChar": 0,
        "endLine": 433,
        "endChar": 11
      },
      "revId": "20efedcccd17c14327938526e3935e4e1eb953ef",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "263a938e_7ddf4ec5",
        "filename": "ssl/dtls_record.cc",
        "patchSetId": 5
      },
      "lineNbr": 433,
      "author": {
        "id": 5440
      },
      "writtenOn": "2024-08-14T00:19:00Z",
      "side": 1,
      "message": "Defined constants. LMK if I should move some of the comments around between here (describing why its this value) and internal.h where the constant is defined.",
      "parentUuid": "a0f79a8c_7db0a39a",
      "range": {
        "startLine": 433,
        "startChar": 0,
        "endLine": 433,
        "endChar": 11
      },
      "revId": "20efedcccd17c14327938526e3935e4e1eb953ef",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "beedb7cd_126491c0",
        "filename": "ssl/internal.h",
        "patchSetId": 5
      },
      "lineNbr": 1031,
      "author": {
        "id": 14196
      },
      "writtenOn": "2024-08-13T00:39:30Z",
      "side": 1,
      "message": "Was trying to figure out why this change is in here, I assume missed with 82f9853fc7? \n\nMaybe since it\u0027s the only change in this file in this cl, commit it separately.",
      "revId": "20efedcccd17c14327938526e3935e4e1eb953ef",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ebd905d4_883d2197",
        "filename": "ssl/internal.h",
        "patchSetId": 5
      },
      "lineNbr": 1031,
      "author": {
        "id": 5440
      },
      "writtenOn": "2024-08-14T00:19:00Z",
      "side": 1,
      "message": "Moved this to https://boringssl-review.googlesource.com/c/boringssl/+/70207",
      "parentUuid": "beedb7cd_126491c0",
      "revId": "20efedcccd17c14327938526e3935e4e1eb953ef",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc08ee30_9beb5cc0",
        "filename": "ssl/ssl_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 4403,
      "author": {
        "id": 14196
      },
      "writtenOn": "2024-08-13T00:39:30Z",
      "side": 1,
      "message": "It looks like you are effectively sanity checking the record layer format in dtls.go now - correct?  Does this comment need updating to indicate this?",
      "revId": "20efedcccd17c14327938526e3935e4e1eb953ef",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d91aae69_6430516b",
        "filename": "ssl/ssl_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 4403,
      "author": {
        "id": 5440
      },
      "writtenOn": "2024-08-14T00:19:00Z",
      "side": 1,
      "message": "Updated the comment.",
      "parentUuid": "cc08ee30_9beb5cc0",
      "revId": "20efedcccd17c14327938526e3935e4e1eb953ef",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47efca52_1ef60c40",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 5
      },
      "lineNbr": 3775,
      "author": {
        "id": 5440
      },
      "writtenOn": "2024-08-14T00:19:00Z",
      "side": 1,
      "message": "Can you advise on a better way to test this? These tests are expecting the connection to timeout, which means that `go test` now takes 15s to run (most of it waiting for timeout).",
      "range": {
        "startLine": 3772,
        "startChar": 0,
        "endLine": 3775,
        "endChar": 30
      },
      "revId": "20efedcccd17c14327938526e3935e4e1eb953ef",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dafb8079_b9f20cd3",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 5
      },
      "lineNbr": 3775,
      "author": {
        "id": 14196
      },
      "writtenOn": "2024-08-14T15:50:45Z",
      "side": 1,
      "message": "Several possibilites? \n\n0) If this is a special case of \"I sent garbage and the server dropped it on the floor and timed out\" consider that it really isn\u0027t special from any other case of sending garbage\n\n1) if 0) is not the case and it\u0027s important, make a test mode where these are instantly fatal and can be instantly recognized as such (but extra code and non default behaviour eeew)\n\n2) Make the timeout configurable, and artificially volkswagen the timeout for test purposes, so we see the timeout case in half a second or something if we truly need to test all the way to the timeout case for these?",
      "parentUuid": "47efca52_1ef60c40",
      "range": {
        "startLine": 3772,
        "startChar": 0,
        "endLine": 3775,
        "endChar": 30
      },
      "revId": "20efedcccd17c14327938526e3935e4e1eb953ef",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "573de8e3_3e561d81",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 5
      },
      "lineNbr": 3775,
      "author": {
        "id": 5440
      },
      "writtenOn": "2024-08-16T22:07:42Z",
      "side": 1,
      "message": "I resolved this TODO by doing the following 2 things:\n1) make the protocol bug not take effect until after the handshake is complete\n2) use the `expectMessageDropped` option in the test case.\n\n(To do #1, I needed to a little plumbing to make the handshakeComplete bool available where I needed it.)",
      "parentUuid": "dafb8079_b9f20cd3",
      "range": {
        "startLine": 3772,
        "startChar": 0,
        "endLine": 3775,
        "endChar": 30
      },
      "revId": "20efedcccd17c14327938526e3935e4e1eb953ef",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}